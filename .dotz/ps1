# Uses tabstop=4; shiftwidth=4 tabs; foldmarker={{{}}};
# vim:set syntax=sh:

export PROMPT_COMMAND=__prompt_command      # Func to gen PS1 after CMDs
############################################################## 
#                           Colors:
############################################################## 
# check your 256 terminal colors: for COLOR in {1..255}; do echo -en "\e[38;5;${COLOR}m${COLOR} "; done; echo;
# Regular                 Bold                     Underline                High Intensity           BoldHigh Intensity        Background           High Intensity Backgrounds
  Bla='\[\e[0;30m\]';     BBla='\[\e[1;30m\]';     UBla='\[\e[4;30m\]';     IBla='\[\e[0;90m\]';     BIBla='\[\e[1;90m\]';     On_Bla='\e[40m';     On_IBla='\[\e[0;100m\]';
  Red='\[\e[0;31m\]';     BRed='\[\e[1;31m\]';     URed='\[\e[4;31m\]';     IRed='\[\e[0;91m\]';     BIRed='\[\e[1;91m\]';     On_Red='\e[41m';     On_IRed='\[\e[0;101m\]';
  Gre='\[\e[0;32m\]';     BGre='\[\e[1;32m\]';     UGre='\[\e[4;32m\]';     IGre='\[\e[0;92m\]';     BIGre='\[\e[1;92m\]';     On_Gre='\e[42m';     On_IGre='\[\e[0;102m\]';
  Yel='\[\e[0;33m\]';     BYel='\[\e[1;33m\]';     UYel='\[\e[4;33m\]';     IYel='\[\e[0;93m\]';     BIYel='\[\e[1;93m\]';     On_Yel='\e[43m';     On_IYel='\[\e[0;103m\]';
  Blu='\[\e[0;34m\]';     BBlu='\[\e[1;34m\]';     UBlu='\[\e[4;34m\]';     IBlu='\[\e[0;94m\]';     BIBlu='\[\e[1;94m\]';     On_Blu='\e[44m';     On_IBlu='\[\e[0;104m\]';
  Pur='\[\e[0;35m\]';     BPur='\[\e[1;35m\]';     UPur='\[\e[4;35m\]';     IPur='\[\e[0;95m\]';     BIPur='\[\e[1;95m\]';     On_Pur='\e[45m';     On_IPur='\[\e[0;105m\]';
  Cya='\[\e[0;36m\]';     BCya='\[\e[1;36m\]';     UCya='\[\e[4;36m\]';     ICya='\[\e[0;96m\]';     BICya='\[\e[1;96m\]';     On_Cya='\e[46m';     On_ICya='\[\e[0;106m\]';
  Whi='\[\e[0;37m\]';     BWhi='\[\e[1;37m\]';     UWhi='\[\e[4;37m\]';     IWhi='\[\e[0;97m\]';     BIWhi='\[\e[1;97m\]';     On_Whi='\e[47m';     On_IWhi='\[\e[0;107m\]';
 
  FlagsC='\[\e[38;5;194m\]'
  FlagsC='\[\e[38;5;150m\]'
  Clock='\[\e[0;250m\]'
  Creset='\[\e[00m\]';
  ### End Color Vars ### }}}
################################ 

# unicode chars: echo -e "♨ ⚐ ⚑ ☇ ♾ ☠ ☝  ☢️  🔀️ ⏎ 🛑 🏁 💩 ↩ 🔄 ↶ ⤣ ↫ ⟲ ↺ ↶ ⍉ ⨂ ⊕ ⊗"
  Uflag="⚑" ; # Uflag="🏁" 
  Ubg="↺ "  ; # Ubg="🔀️"     


function __prompt_command() {
   local EXIT="$?"                         # This needs to be first
   PS1="$Cya┌─["

   # hosts
   PS1+="$BWhi\u@\h"
   PS1+="$Cya]─["

   # environment
   PS1+="$IYel$PTK_ZONE $PTK_GLX$Cya] "

   # path
   PS1+="$BBlu\w"

   # git
   local b="$(git symbolic-ref HEAD 2>/dev/null)"; 
   local pat=".*nothing to commit.*"; 
   if [[ -n "$b" ]]; then 
      [[ ! $(git status 2> /dev/null | tail -n1) =~ $pat ]] && PS1+="$BRed ⎇ (✎ ${b##refs/heads/})" || PS1+=" $BGre ⎇ (${b##refs/heads/})"
   fi
   PS1+="$Creset"

   # newline
   PS1+="\n$Cya└─["

   # time
   PS1+="$Clock\t$Cya]─["

   ## Backgrounded running jobs
   local BKGJBS=$(jobs -r | wc -l | tr -d ' ')
   PS1+="$Creset${BKGJBS} ${FlagsC}$Ubg"

   ## Stopped Jobs
   local STPJBS=$(jobs -s | wc -l | tr -d ' ')
   PS1+="$Creset${STPJBS} ${FlagsC}$Uflag"
   PS1+="$Cya] "

   # prev command status
   local exit_st=$(if [ $EXIT = 0 ]; then echo "$BGre✔"; else echo "$BRed✘"; fi);
   PS1+="$exit_st "

   # prompt
   PS1+="$Creset\$ "
}


# above is a improvement of:
#__git_ps1 () { local b="$(git symbolic-ref HEAD 2>/dev/null)"; [[ -n "$b" ]] && printf " (%s)" "${b##refs/heads/}" ; }
#export PS1='\[\e[0;36m\]┌─\[\e[1;37m\][\u@\h]\[\e[0m\]\[\e[0;36m\]─\[\e[0;93m\](\w)\n\[\e[0;36m\]└─\[\e[1;32m\][\A]\[\e[0m\]\$ '
#export PS1='\[\e[01;30m\]\t `if [ $? = 0 ]; then echo "\[\e[32m\]✔"; else echo "\[\e[31m\]✘"; fi` \[\e[00;37m\]\u\[\e[01;37m\]:`pat=".*nothing to commit.*"; [[ ! $(git status 2> /dev/null | tail -n1) =~ $pat ]] && echo "\[\e[31m\]" || echo "\[\e[32m\]"`$(__git_ps1 "(%s)\[\e[00m\]")\[\e[01;34m\]\w\[\e[00m\]\$ '
#export PS1='\[\e[0;36m\]┌─[\[\e[1;37m\]\u@\h\[\e[0m\]\[\e[0;36m\]]─[\[\e[0;93m\]$PTK_ZONE-$PTK_GLX\[\e[0;36m\]] \[\e[01;34m\]\w`pat=".*nothing to commit.*"; [[ ! $(git status 2> /dev/null | tail -n1) =~ $pat ]] && echo "\[\e[31m\] ⎇ ✎" || echo "\[\e[32m\] ⎇ ✎"`$(__git_ps1 "(%s)\[\e[00m\]")\n\[\e[0;36m\]└─[\[\e[01;30m\]\t\[\e[0;36m\]] `if [ $? = 0 ]; then echo "\[\e[32m\]✔"; else echo "\[\e[31m\]✘"; fi` \[\e[00m\]\$ '

